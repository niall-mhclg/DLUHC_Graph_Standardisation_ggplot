mutate(changebefore = {{ycol}}-lag({{ycol}}),
changeafter = lead({{ycol}})-{{ycol}},
change = case_when(
(is.na(changebefore)&changeafter>0)|(is.na(changeafter)&changebefore<0) ~ "Trough",
(is.na(changebefore)&changeafter<0)|(is.na(changeafter)&changebefore>0) ~ "Peak",
changebefore>0&changeafter>0&changebefore>changeafter ~ "Dec_Growth",
changebefore>0&changeafter>0&changebefore<=changeafter ~ "Inc_Growth",
changebefore<=0&changeafter<=0&changebefore<=changeafter ~ "Dec_Fall",
changebefore<=0&changeafter<=0&changebefore>changeafter ~ "Inc_Fall",
changebefore==0&changeafter==0 ~ "No_Change",
changebefore<=0&changeafter>0 ~ "Trough",
TRUE ~ "Peak")) %>%
mutate(y_nudge = case_when(
change =="Dec_Growth" ~ 0.01*ymax,
change =="Inc_Growth" ~ -0.01*ymax,
change =="Dec_Fall" ~ -0.01*ymax,
change == "Inc_Fall"~ 0.01*ymax,
change == "No_Change"~ 0.01*ymax,
change == "Trough"~ -0.03*ymax,
TRUE ~ 0.03*ymax)) %>%
mutate(x_nudge = case_when(
change =="Dec_Growth" ~ -0.007*numchar*xrange,
change =="Inc_Growth" ~ 0.007*numchar*xrange,
change =="Dec_Fall" ~ -0.007*numchar*xrange,
change == "Inc_Fall"~ 0.007*numchar*xrange,
change == "No_Change"~ 0.007*numchar*xrange,
change == "Trough"~ -0,
TRUE ~ 0))
return(.data)
}
Label_nudges(TimeSeries_1var,Date,Demolitions)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol){
.data <- Label_nudges(.data,xcol,ycol)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=4,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = .data$x_nudge,nudge_y = .data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(filter(TimeSeries_1var,Date>"2017-01-01"),xcol = Date,ycol = Demolitions)
#Function to create nudges for labels
Label_nudges = function(.data,xcol,ycol){
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
numchar = nchar(ymax)
xmax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{xcol}})) %>%  pull()
xmin <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = min({{xcol}})) %>%  pull()
xrange = as.numeric(xmax-xmin)
.data <- .data  %>%
arrange({{xcol}}) %>%
mutate(changebefore = {{ycol}}-lag({{ycol}}),
changeafter = lead({{ycol}})-{{ycol}},
change = case_when(
(is.na(changebefore)&changeafter>0)|(is.na(changeafter)&changebefore<0) ~ "Trough",
(is.na(changebefore)&changeafter<0)|(is.na(changeafter)&changebefore>0) ~ "Peak",
changebefore>0&changeafter>0&changebefore>changeafter ~ "Dec_Growth",
changebefore>0&changeafter>0&changebefore<=changeafter ~ "Inc_Growth",
changebefore<=0&changeafter<=0&changebefore<=changeafter ~ "Dec_Fall",
changebefore<=0&changeafter<=0&changebefore>changeafter ~ "Inc_Fall",
changebefore==0&changeafter==0 ~ "No_Change",
changebefore<=0&changeafter>0 ~ "Trough",
TRUE ~ "Peak")) %>%
mutate(y_nudge = case_when(
change =="Dec_Growth" ~ 0.01*ymax,
change =="Inc_Growth" ~ -0.01*ymax,
change =="Dec_Fall" ~ -0.01*ymax,
change == "Inc_Fall"~ 0.01*ymax,
change == "No_Change"~ 0.01*ymax,
change == "Trough"~ -0.03*ymax,
TRUE ~ 0.03*ymax)) %>%
mutate(x_nudge = case_when(
change =="Dec_Growth" ~ -0.007*numchar*xrange,
change =="Inc_Growth" ~ 0.007*numchar*xrange,
change =="Dec_Fall" ~ -0.007*numchar*xrange,
change == "Inc_Fall"~ 0.007*numchar*xrange,
change == "No_Change"~ 0.007*numchar*xrange,
change == "Trough"~ -0,
TRUE ~ 0))
return(.data)
}
Label_nudges(TimeSeries_1var,Date,Demolitions)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=4,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = .data$x_nudge,nudge_y = .data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(filter(TimeSeries_1var,Date>"2017-01-01"),xcol = Date,ycol = Demolitions)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=4,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = .data$x_nudge,nudge_y = .data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(filter(TimeSeries_1var,Date>"2017-01-01"),xcol = Date,ycol = Demolitions)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=4,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = .data$x_nudge,nudge_y = .data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(filter(TimeSeries_1var,Date>"2017-01-01"),xcol = Date,ycol = Demolitions)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=4,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 1.1)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.5)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.6)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.7)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.8)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9,ynudge=0.9)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9,ynudge=0.9)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9,ynudge=0.9,textsize = 7)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9,ynudge=0.9,textsize = 7)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.9,ynudge=0.9,textsize = 3)
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 3)
#Time series with percentage labels for 1 variable
Time_Series_w_perc_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = percent({{ycol}}))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 3)
#Time series with percentage labels for 1 variable
Time_Series_w_perc_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = percent({{ycol}},accuracy = 1))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 3)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 1,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 1.3,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 1.5,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 2,ynudge=1,textsize = 5)
#Time series with percentage labels for 1 variable
Time_Series_w_perc_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = percent({{ycol}},accuracy = 1))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 2,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 8,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 4,ynudge=1,textsize = 5)
Time_Series_w_perc_labels(mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions)),xcol = Date,ycol = Demolitions,xnudge = 4,ynudge=1.5,textsize = 5)
#Time series with value labels for 1 variable
Time_Series_w_comma_labels <- function(.data,xcol,ycol,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = comma({{ycol}},accuracy=1))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_comma_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 3)
#Time series with value labels for 1 variable
Time_Series_w_labels <- function(.data,xcol,ycol,FUN=comma,xnudge=1,ynudge=1,textsize=4){
.data <- Label_nudges(.data,{{xcol}},{{ycol}})
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},label = FUN({{ycol}},accuracy=1))) +
geom_line(show.legend = TRUE , size = 1.5,color = unname(GovUK["DLUHC"])) +
geom_point(size = 3,colour = unname(GovUK["DLUHC"])) +
geom_text(size=textsize,fontface ="bold", colour = unname(GovUK["DLUHC"]), key_glyph = "rect",nudge_x = xnudge*.data$x_nudge,nudge_y = ynudge*.data$y_nudge,na.rm = T)+
scale_colour_manual(values = unname(GovUK["DLUHC"]))+
theme_classic(base_size = 18) +
scale_y_continuous(limits = c(0,ymax*1.1))
graph
}
Time_Series_w_labels(TimeSeries_1var,xcol = Date,ycol = Demolitions,xnudge = 0.7,ynudge=0.7,textsize = 3)
TimeSeries_1var_perc <-mutate(TimeSeries_1var,Demolitions = Demolitions/max(Demolitions))
Time_Series_w_labels(TimeSeries_1var_perc,xcol = Date,ycol = Demolitions,xnudge = 4,ynudge=1.5,textsize = 5)
Time_Series_w_labels(TimeSeries_1var_perc,Date,Demolitions,FUN=percent,xnudge = 4,ynudge=1.5,textsize = 5)
# Time Series with 2+ variable
Time_Series_vars <- function(.data,xcol,ycol,groupcol){
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
group_count <- nrow(.data %>% ungroup() %>% select({{groupcol}}) %>% distinct({{groupcol}},.keep_all = FALSE))
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},group={{groupcol}})) +
geom_line(show.legend = TRUE , size = 1.5,aes(color = {{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)})+
theme_classic(base_size = 18)+
scale_y_continuous(limits = c(0,ymax*1.1),expand=c(0,0),labels=comma) +
scale_x_date(expand=c(0,0))
graph
}
Time_Series_vars(TimeSeries_3x1var,Date,Sales,variable)
### Time Series with 3 factors of 1 variable
TimeSeries_3x1var <- Sales_Dems_w_Date %>%
mutate(Disposal.Detail.Tier.1 = toupper(Disposal.Detail.Tier.1))%>%
filter(Disposal.Type=="Sale") %>%
group_by(Date,Disposal.Detail.Tier.1) %>%
summarise(Sales = sum(Units,na.rm=T)) %>%
rename("variable"="Disposal.Detail.Tier.1")
Time_Series_vars(TimeSeries_3x1var,Date,Sales,variable)
Time_Series_vars(filter(TimeSeries_3x1var,Date>"2000-01-01"),Date,Sales,variable)
Time_Series_vars(filter(TimeSeries_3x1var,Date>"2000-01-01"),Date,Sales,variable) +
theme(legend.position = c(0.7,0.8))
# Time Series with 2+ variable
Time_Series_vars <- function(.data,xcol,ycol,groupcol){
ymax <- .data %>% select({{ycol}},{{xcol}}) %>%
summarise(x = max({{ycol}})) %>%  pull()
ymax = max(ymax)
group_count <- nrow(.data %>% ungroup() %>% select({{groupcol}}) %>% distinct({{groupcol}},.keep_all = FALSE))
graph <- ggplot(data = .data,aes(x={{xcol}}, y={{ycol}},group={{groupcol}})) +
geom_line(show.legend = TRUE , size = 1.5,aes(color = {{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)})+
theme_classic(base_size = 18)+
scale_y_continuous(limits = c(0,ymax*1.1),expand=c(0,0),labels=comma) +
scale_x_date(expand=c(0,0))
graph
}
Time_Series_vars(TimeSeries_3x1var,Date,Sales,variable)
Time_Series_vars(filter(TimeSeries_3x1var,Date>"2000-01-01"),Date,Sales,variable) +
theme(legend.position = c(0.7,0.8))
View(TimeSeries_n_var)
Time_Series_vars(TimeSeries_n_var,Date,Sales,LA_NAME)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUk["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour={{RegionCol}}), colour = GovUk["DLUHC"])+
facet_wrap(~ {{RegionCol}}, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
View(Reg_TimeSeries)
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour={{RegionCol}}), colour = GovUK["DLUHC"])+
facet_wrap(~ {{RegionCol}}, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour={{RegionCol}}), colour = GovUK["DLUHC"])+
facet_wrap(~ {{RegionCol}}, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour={{RegionCol}}), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionCol, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour=RegionName), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionName, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
.data <- .data %>% rename("RegionName"={{RegionCol}})
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour=RegionName), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionName, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20CD)
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
.data <- .data %>% rename("RegionName"={{RegionCol}}) %>% filter(!is.na(RegionName))
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour=RegionName), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionName, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE)
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
.data <- .data %>% rename("RegionName"={{RegionCol}}) %>% filter(!is.na(RegionName))
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour=RegionName), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionName, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE) +
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series
Region_Time_Series_1_var = function(.data,xcol,ycol,RegionCol){
.data <- .data %>% rename("RegionName"={{RegionCol}}) %>% filter(!is.na(RegionName)&RegionName!="")
graph <- ggplot(.data, mapping=aes(x={{xcol}}, y={{ycol}})) +
geom_line(show.legend = FALSE, col = GovUK["DLUHC"] , size = 2) +
geom_line(aes(x={{xcol}},y={{ycol}}, colour=RegionName), colour = GovUK["DLUHC"])+
facet_wrap(~ RegionName, scales='free',strip.position="top") +
gghighlight(use_direct_label = FALSE) +
theme_classic(base_size = 18)+
theme(strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4,size=10),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
graph
}
Region_Time_Series_1_var(Reg_TimeSeries,Date,Sales,RGN20NM)
#Regional Time Series multi variables
Region_Time_Series_n_var = function(.data,xcol,ycol,groupcol,RegionCol,linesize=1.5){
.data %>%
ggplot(aes(x={{xcol}},y={{ycol}},group = {{groupcol}},colour={{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)}) +
geom_line(size = linesize) +
facet_wrap(~{{RegionCol}},scales="free") +
theme_classic(base_size = 12)+
theme(legend.position = "top",strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())+
}
#Regional Time Series multi variables
Region_Time_Series_n_var = function(.data,xcol,ycol,groupcol,RegionCol,linesize=1.5){
.data %>%
ggplot(aes(x={{xcol}},y={{ycol}},group = {{groupcol}},colour={{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)}) +
geom_line(size = linesize) +
facet_wrap(~{{RegionCol}},scales="free") +
theme_classic(base_size = 12)+
theme(legend.position = "top",strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
View(Reg_TimeSeries_2x1var)
Region_Time_Series_n_var(Reg_TimeSeries_2x1var,Date,Demolitions,Provider,RGN20NM)
#Regional Time Series multi variables
Region_Time_Series_n_var = function(.data,xcol,ycol,groupcol,RegionCol,linesize=1.5){
group_count <- nrow(.data %>% ungroup() %>% select({{groupcol}}) %>% distinct({{groupcol}},.keep_all = FALSE))
.data %>%
ggplot(aes(x={{xcol}},y={{ycol}},group = {{groupcol}},colour={{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)}) +
geom_line(size = linesize) +
facet_wrap(~{{RegionCol}},scales="free") +
theme_classic(base_size = 12)+
theme(legend.position = "top",strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
Region_Time_Series_n_var(Reg_TimeSeries_2x1var,Date,Demolitions,Provider,RGN20NM)
#Regional Time Series multi variables
Region_Time_Series_n_var = function(.data,xcol,ycol,groupcol,RegionCol,linesize=1.5){
group_count <- nrow(.data %>% ungroup() %>% select({{groupcol}}) %>% distinct({{groupcol}},.keep_all = FALSE))
.data %>%
rename("RegionName"={{RegionCol}}) %>%
filter(!is.na(RegionName)&RegionName!="")%>%
ggplot(aes(x={{xcol}},y={{ycol}},group = {{groupcol}},colour={{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)}) +
geom_line(size = linesize) +
facet_wrap(~{{RegionCol}},scales="free") +
theme_classic(base_size = 12)+
theme(legend.position = "top",strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
Region_Time_Series_n_var(Reg_TimeSeries_2x1var,Date,Demolitions,Provider,RGN20NM)
#Regional Time Series multi variables
Region_Time_Series_n_var = function(.data,xcol,ycol,groupcol,RegionCol,linesize=1.5){
group_count <- nrow(.data %>% ungroup() %>% select({{groupcol}}) %>% distinct({{groupcol}},.keep_all = FALSE))
.data %>%
rename("RegionName"={{RegionCol}}) %>%
filter(!is.na(RegionName)&RegionName!="")%>%
ggplot(aes(x={{xcol}},y={{ycol}},group = {{groupcol}},colour={{groupcol}})) +
scale_colour_manual(values =
if(group_count<4){unname(GovUK[c("blue","dark-blue","light-blue")])}
else if(group_count<10){unname(GovUK[c("red","green","blue","purple","mid-grey","pink","orange","brown","turquoise","yellow","dark-blue")])}
else{unname(GovUK)}) +
geom_line(size = linesize) +
facet_wrap(~RegionName,scales="free") +
theme_classic(base_size = 12)+
theme(legend.position = "top",strip.background = element_blank(), axis.text.x = element_text(angle=0, vjust = 0.4),axis.title = element_text(), axis.line  = element_line(), axis.ticks = element_blank())
}
Region_Time_Series_n_var(Reg_TimeSeries_2x1var,Date,Demolitions,Provider,RGN20NM)
View(Reg_TimeSeries_3x1var)
Region_Time_Series_n_var(Reg_TimeSeries_3x1var,Date,Sales,Disposal.Detail.Tier.2,RGN20NM)
Region_Time_Series_n_var(Reg_TimeSeries_3x1var,Date,Sales,Disposal.Detail.Tier.1,RGN20NM)
